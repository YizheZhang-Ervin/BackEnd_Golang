// Code generated by protoc-gen-go. DO NOT EDIT.
// source: myproto.proto

// 指定所在包包名

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 定义枚举类型
type Week int32

const (
	Week_Monday   Week = 0
	Week_Turesday Week = 1
)

var Week_name = map[int32]string{
	0: "Monday",
	1: "Turesday",
}

var Week_value = map[string]int32{
	"Monday":   0,
	"Turesday": 1,
}

func (x Week) String() string {
	return proto.EnumName(Week_name, int32(x))
}

func (Week) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_04877df457807402, []int{0}
}

// 定义消息体
type Student struct {
	Age   int32   `protobuf:"varint,1,opt,name=age,proto3" json:"age,omitempty"`
	Name  string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	P     *People `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`
	Score []int32 `protobuf:"varint,4,rep,packed,name=score,proto3" json:"score,omitempty"`
	// 枚举
	W Week `protobuf:"varint,5,opt,name=w,proto3,enum=pb.Week" json:"w,omitempty"`
	// 联合体
	//
	// Types that are valid to be assigned to Data:
	//	*Student_Teacher
	//	*Student_Class
	Data                 isStudent_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Student) Reset()         { *m = Student{} }
func (m *Student) String() string { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()    {}
func (*Student) Descriptor() ([]byte, []int) {
	return fileDescriptor_04877df457807402, []int{0}
}

func (m *Student) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Student.Unmarshal(m, b)
}
func (m *Student) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Student.Marshal(b, m, deterministic)
}
func (m *Student) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Student.Merge(m, src)
}
func (m *Student) XXX_Size() int {
	return xxx_messageInfo_Student.Size(m)
}
func (m *Student) XXX_DiscardUnknown() {
	xxx_messageInfo_Student.DiscardUnknown(m)
}

var xxx_messageInfo_Student proto.InternalMessageInfo

func (m *Student) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Student) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Student) GetP() *People {
	if m != nil {
		return m.P
	}
	return nil
}

func (m *Student) GetScore() []int32 {
	if m != nil {
		return m.Score
	}
	return nil
}

func (m *Student) GetW() Week {
	if m != nil {
		return m.W
	}
	return Week_Monday
}

type isStudent_Data interface {
	isStudent_Data()
}

type Student_Teacher struct {
	Teacher string `protobuf:"bytes,6,opt,name=teacher,proto3,oneof"`
}

type Student_Class struct {
	Class string `protobuf:"bytes,7,opt,name=class,proto3,oneof"`
}

func (*Student_Teacher) isStudent_Data() {}

func (*Student_Class) isStudent_Data() {}

func (m *Student) GetData() isStudent_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Student) GetTeacher() string {
	if x, ok := m.GetData().(*Student_Teacher); ok {
		return x.Teacher
	}
	return ""
}

func (m *Student) GetClass() string {
	if x, ok := m.GetData().(*Student_Class); ok {
		return x.Class
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Student) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Student_Teacher)(nil),
		(*Student_Class)(nil),
	}
}

// 消息体可以嵌套
type People struct {
	Weight               int32    `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *People) Reset()         { *m = People{} }
func (m *People) String() string { return proto.CompactTextString(m) }
func (*People) ProtoMessage()    {}
func (*People) Descriptor() ([]byte, []int) {
	return fileDescriptor_04877df457807402, []int{1}
}

func (m *People) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_People.Unmarshal(m, b)
}
func (m *People) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_People.Marshal(b, m, deterministic)
}
func (m *People) XXX_Merge(src proto.Message) {
	xxx_messageInfo_People.Merge(m, src)
}
func (m *People) XXX_Size() int {
	return xxx_messageInfo_People.Size(m)
}
func (m *People) XXX_DiscardUnknown() {
	xxx_messageInfo_People.DiscardUnknown(m)
}

var xxx_messageInfo_People proto.InternalMessageInfo

func (m *People) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func init() {
	proto.RegisterEnum("pb.Week", Week_name, Week_value)
	proto.RegisterType((*Student)(nil), "pb.Student")
	proto.RegisterType((*People)(nil), "pb.People")
}

func init() { proto.RegisterFile("myproto.proto", fileDescriptor_04877df457807402) }

var fileDescriptor_04877df457807402 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x3b, 0x4d, 0xb2, 0xad, 0x53, 0x95, 0x32, 0x48, 0x58, 0x7a, 0x90, 0xa5, 0x07, 0x09,
	0x1e, 0x72, 0x48, 0x2f, 0x9e, 0x3d, 0x79, 0x11, 0x64, 0x2b, 0x78, 0xde, 0x24, 0x43, 0xab, 0xb6,
	0xc9, 0x92, 0x6c, 0x09, 0xf9, 0x5d, 0xfe, 0x41, 0xd9, 0x24, 0x82, 0x97, 0xe5, 0x7d, 0x3b, 0xc3,
	0xbc, 0x99, 0x87, 0x37, 0xe7, 0xde, 0x36, 0xb5, 0xab, 0xd3, 0xe1, 0xa5, 0xb9, 0xcd, 0xb7, 0x3f,
	0x80, 0x8b, 0xbd, 0xbb, 0x94, 0x5c, 0x39, 0x5a, 0x63, 0x60, 0x0e, 0x2c, 0x41, 0x41, 0x12, 0x69,
	0x2f, 0x89, 0x30, 0xac, 0xcc, 0x99, 0xe5, 0x5c, 0x41, 0x72, 0xa5, 0x07, 0x4d, 0x12, 0xc1, 0xca,
	0x40, 0x41, 0xb2, 0xca, 0x30, 0xb5, 0x79, 0xfa, 0xc6, 0xb5, 0x3d, 0xb1, 0x06, 0x4b, 0x77, 0x18,
	0xb5, 0x45, 0xdd, 0xb0, 0x0c, 0x55, 0x90, 0x44, 0x7a, 0x04, 0x8a, 0x11, 0x3a, 0x19, 0x29, 0x48,
	0x6e, 0xb3, 0xa5, 0xef, 0xff, 0x60, 0xfe, 0xd6, 0xd0, 0xd1, 0x06, 0x17, 0x8e, 0x4d, 0x71, 0xe4,
	0x46, 0x0a, 0x3f, 0xfe, 0x65, 0xa6, 0xff, 0x3e, 0x28, 0xc6, 0xa8, 0x38, 0x99, 0xb6, 0x95, 0x8b,
	0xa9, 0x32, 0xe2, 0xb3, 0xc0, 0xb0, 0x34, 0xce, 0x6c, 0x15, 0x8a, 0xd1, 0x96, 0x62, 0x14, 0x1d,
	0x7f, 0x1e, 0x8e, 0x6e, 0x5a, 0x7b, 0xa2, 0x47, 0x85, 0xa1, 0x37, 0x22, 0x44, 0xf1, 0x5a, 0x57,
	0xa5, 0xe9, 0xd7, 0x33, 0xba, 0xc6, 0xe5, 0xfb, 0xa5, 0xe1, 0xd6, 0x13, 0x64, 0x0f, 0x18, 0xe6,
	0x5f, 0xbb, 0x27, 0xba, 0xc7, 0x60, 0x6f, 0x7a, 0xfa, 0x77, 0xcb, 0x66, 0xe5, 0xf5, 0x94, 0x4a,
	0x2e, 0x86, 0xb0, 0x76, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x65, 0x12, 0x4a, 0x06, 0x3d, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Bj38Client is the client API for Bj38 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Bj38Client interface {
	Say(ctx context.Context, in *People, opts ...grpc.CallOption) (*Student, error)
}

type bj38Client struct {
	cc *grpc.ClientConn
}

func NewBj38Client(cc *grpc.ClientConn) Bj38Client {
	return &bj38Client{cc}
}

func (c *bj38Client) Say(ctx context.Context, in *People, opts ...grpc.CallOption) (*Student, error) {
	out := new(Student)
	err := c.cc.Invoke(ctx, "/pb.bj38/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Bj38Server is the server API for Bj38 service.
type Bj38Server interface {
	Say(context.Context, *People) (*Student, error)
}

// UnimplementedBj38Server can be embedded to have forward compatible implementations.
type UnimplementedBj38Server struct {
}

func (*UnimplementedBj38Server) Say(ctx context.Context, req *People) (*Student, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Say not implemented")
}

func RegisterBj38Server(s *grpc.Server, srv Bj38Server) {
	s.RegisterService(&_Bj38_serviceDesc, srv)
}

func _Bj38_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(People)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(Bj38Server).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.bj38/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(Bj38Server).Say(ctx, req.(*People))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bj38_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.bj38",
	HandlerType: (*Bj38Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Bj38_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "myproto.proto",
}
